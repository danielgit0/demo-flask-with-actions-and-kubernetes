---
'on':
  push:
    branches:
      - main
jobs:
  test:
    name: Test
    runs-on: self-hosted
    strategy:
      matrix:
        python-version:
          - '3.7'
    steps:
      - uses: actions/checkout@v3
      - name: 'Set up Python ${{ matrix.python-version }}'
        uses: actions/setup-python@v3
        with:
          python-version: '${{ matrix.python-version }}'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
      - name: Testing the app
        run: |
          pytest
  build:
    name: Build
    needs: test
    runs-on: self-hosted
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: '${{ github.repository_owner }}'
          password: '${{ secrets.GITHUB_TOKEN }}'
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ghcr.io/${{ github.repository }}:latest
          platforms: '${{ matrix.platforms }}'
          push: true
          outputs: >-
            type=image,name=target,annotation-index.org.opencontainers.image.description=Mymulti-arch image
  deploy:
    name: Deploy
    needs:
      - test
      - build
    runs-on: self-hosted
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: '${{ secrets.KUBERNETES_CONFIG }}'
          context: default
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Render Deployment YML
        uses: nowactions/envsubst@v1
        with:
          input: ./k8s/deployment-template.yml
          output: ./deployment.yml
        env:
          IMAGE: 'ghcr.io/${{ github.repository }}:latest'
          REPLICAS: 1
          NAMESPACE: github
          SERVICE_NAME: flask-demo-api
      - name: Deploy to the Kubernetes cluster
        run: |
          kubectl apply -f ./deployment.yml
          kubectl -n github rollout restart deployment flask-demo-api
